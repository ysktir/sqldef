services:
  mysql:
    image: mysql:${MYSQL_VERSION:-8.0}
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
      MYSQL_ROOT_HOST: '%'
    volumes:
      - ./.docker/mysql/data:/var/lib/mysql
    ports:
      - '3306:3306'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
  postgres:
    image: postgres:${POSTGRES_VERSION:-14}
    # image: hartmutcouk/pg-repack-docker:1.4.6
    environment:
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./.docker/postgresql/data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
  mssql:
    # todo: 動いた
    image: mcr.microsoft.com/mssql/server:2019-CU28-ubuntu-20.04
    # image: mcr.microsoft.com/mssql/server:2022-latest
    # image: mcr.microsoft.com/mssql/server:2017-CU28-ubuntu-16.04
    user: root
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Passw0rd
      # SSQL_PID: Developer
    volumes:
      - ./.docker/mssql/data:/var/opt/mssql/data
      # - ./.docker/mssql:/var/opt/mssql
    ports:
      - '1433:1433'
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "Passw0rd", "-Q", "SELECT 1", "||", "exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
